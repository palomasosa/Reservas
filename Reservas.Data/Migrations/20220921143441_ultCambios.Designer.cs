// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservas.BD.Data;

#nullable disable

namespace Reservas.BD.Migrations
{
    [DbContext(typeof(BDContext))]
    [Migration("20220921143441_ultCambios")]
    partial class ultCambios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Reservas.BD.Data.Entidades.Alojamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DireccionAlojamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreAlojamiento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "AlojamientoID_UQ")
                        .IsUnique();

                    b.ToTable("Alojamientos");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.Huesped", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PersonaId" }, "PersonaId_UQ")
                        .IsUnique();

                    b.ToTable("Huespedes");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AlojamientoId")
                        .HasColumnType("int");

                    b.Property<int>("HuespedId")
                        .HasColumnType("int");

                    b.Property<int>("RespReservaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaDeposito")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<int>("horarioCheckIn")
                        .HasColumnType("int");

                    b.Property<int>("horarioCheckOut")
                        .HasColumnType("int");

                    b.Property<int>("montoDeposito")
                        .HasColumnType("int");

                    b.Property<int>("precioTotal")
                        .HasColumnType("int");

                    b.Property<int>("saldoRestante")
                        .HasColumnType("int");

                    b.Property<int>("totalNoches")
                        .HasColumnType("int");

                    b.Property<int>("totalPasajeros")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlojamientoId");

                    b.HasIndex("HuespedId");

                    b.HasIndex("RespReservaId");

                    b.HasIndex(new[] { "Id" }, "ReservaID_UQ")
                        .IsUnique();

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.RespReserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PersonaId" }, "PersonaId_UQ")
                        .IsUnique()
                        .HasDatabaseName("PersonaId_UQ1");

                    b.ToTable("RespReservas");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.Huesped", b =>
                {
                    b.HasOne("Reservas.BD.Data.Entidades.Persona", "Persona")
                        .WithOne("huesped")
                        .HasForeignKey("Reservas.BD.Data.Entidades.Huesped", "PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.Reserva", b =>
                {
                    b.HasOne("Reservas.BD.Data.Entidades.Alojamiento", null)
                        .WithMany("Reservas")
                        .HasForeignKey("AlojamientoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Reservas.BD.Data.Entidades.Huesped", "Huesped")
                        .WithMany("reservas")
                        .HasForeignKey("HuespedId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reservas.BD.Data.Entidades.RespReserva", "RespReserva")
                        .WithMany("reservas")
                        .HasForeignKey("RespReservaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Huesped");

                    b.Navigation("RespReserva");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.RespReserva", b =>
                {
                    b.HasOne("Reservas.BD.Data.Entidades.Persona", "Persona")
                        .WithOne("respReserva")
                        .HasForeignKey("Reservas.BD.Data.Entidades.RespReserva", "PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.Alojamiento", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.Huesped", b =>
                {
                    b.Navigation("reservas");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.Persona", b =>
                {
                    b.Navigation("huesped");

                    b.Navigation("respReserva");
                });

            modelBuilder.Entity("Reservas.BD.Data.Entidades.RespReserva", b =>
                {
                    b.Navigation("reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
